{% extends '::base.html.twig' %}
{% block contenu %}
<div class="container base">
    <div class="row">
        <div class="col-xs-12 col-md-12  col-lg-12"> 
            <div class="row">
                <div class="body-content col-xs-12 col-md-12  col-lg-12">
                    <div class="form-group text-center"> 
                        <a class="btn btn-primary" onclick="AddPoint();">Mettre à jour les rues de Voreppe</a>
                    </div>
                    <div class="form-group"> 
                        <div id="map-canvas" class="col-sm-12 col-md-12 col-lg-10 col-sm-offset-1 stream-map" style="height: 500px"></div> 
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="body-content col-xs-12 col-md-7  col-lg-7 col-md-offset-1">
                    <h1>TypeRue list</h1>

                    <table class="records_list">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Libelle</th>
                                <th>Latitude</th>
                                <th>Longitude</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
        {% for entity in entities %}
                            <tr>
                                <td><a href="{{ path('typerue_show', { 'id': entity.id }) }}">{{ entity.id }}</a></td>
                                <td>{{ entity.libelle }}</td>
                                <td>{{ entity.latitude }}</td>
                                <td>{{ entity.longitude }}</td>
                                <td>
                                    <ul>
                                        <li>
                                            <a href="{{ path('typerue_show', { 'id': entity.id }) }}">show</a>
                                        </li>
                                        <li>
                                            <a href="{{ path('typerue_edit', { 'id': entity.id }) }}">edit</a>
                                        </li>
                                    </ul>
                                </td>
                            </tr>
        {% endfor %}
                        </tbody>
                    </table>

                    <ul>
                        <li>
                            <a href="{{ path('typerue_new') }}">
                                Create a new entry
                            </a>
                        </li>
                    </ul>

                </div>
            </div>
        </div>
    </div>
</div>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js" type="text/javascript"></script>
<script src="https://maps.googleapis.com/maps/api/js?sensor=false&libraries=geometry"></script>
<script type="text/javascript">

                            function sleep(milliseconds) {
                                var start = new Date().getTime();
                                for (var i = 0; i < 1e7; i++) {
                                    if ((new Date().getTime() - start) > milliseconds) {
                                        break;
                                    }
                                }
                            }
                            var poly, map;
                            var markers = [];
                            var path = new google.maps.MVCArray;
                            function initialize() {
                                var geocoder = new google.maps.Geocoder();
                                var request = {
                                    address: '1 place charles de gaulle voreppe',
                                    region: 'fr', //pour améliorer la qualité des résultats en précisant que l'on cherche principalement en France
                                    language: 'fr'
                                };
                                geocoder.geocode(request, function(results, status) {
                                    if (status === google.maps.GeocoderStatus.OK) {
                                        var lat = results[0].geometry.location.lat();
                                        var lng = results[0].geometry.location.lng();
                                        var fenway = new google.maps.LatLng(lat, lng);
                                        var mapOptions = {
                                            center: fenway,
                                            zoom: 15,
                                        };
                                        map = new google.maps.Map(
                                                document.getElementById('map-canvas'), mapOptions);
                                        map.setCenter(fenway);
                                        var marker = new google.maps.Marker({
                                            position: fenway,
                                            map: map,
                                            icon: {
                                                path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,
                                                strokeColor: "blue",
                                                scale: 3
                                            },
                                        });
                                        poly = new google.maps.Polygon({
                                            strokeWeight: 3,
                                            fillColor: '#5555FF'
                                        });
                                        poly.setMap(map);
                                        poly.setPaths(new google.maps.MVCArray([path]));
                                        google.maps.event.addListener(map, 'click', addPoint);
                                    } else {
                                        alert("Impossible de trouver l'adresse via Google Maps.");
                                    }
                                });
                            }
                            function addPoint(event) {

                                path.insertAt(path.length, event.latLng);
                                var marker = new google.maps.Marker({
                                    position: event.latLng,
                                    map: map,
                                    draggable: true
                                });
                                markers.push(marker);
                                marker.setTitle("#" + path.length);
                                google.maps.event.addListener(marker, 'click', function() {
                                    marker.setMap(null);
                                    for (var i = 0, I = markers.length; i < I && markers[i] != marker; ++i)
                                        ;
                                    markers.splice(i, 1);
                                    path.removeAt(i);
                                }
                                );
                                google.maps.event.addListener(marker, 'dragend', function() {
                                    for (var i = 0, I = markers.length; i < I && markers[i] != marker; ++i)
                                        ;
                                    path.setAt(i, marker.getPosition());
                                }
                                );
                                {% for entity in entities|slice(30, 40) %}
                                var val = "";
                                val = "{{entity}}";
                                val = val.replace(/\s{2,}/g, ' ');
                                val = val + "38340 Voreppe";
                                var geocoder = new google.maps.Geocoder();
                                var request = {
                                    address: val,
                                    region: 'fr'
                                };
                                geocoder.geocode(request, function(results, status) {
                                    // console.log("Request : " + request['address']);
                                    {#if (status === google.maps.GeocoderStatus.OK) {#}
                                        var lat = results[0].geometry.location.lat();
                                        var lng = results[0].geometry.location.lng();
                                        $.ajax({
                                            type: 'POST',
                                            data: {'id':{{entity.id}}, 'lat': lat, 'lng': lng},
                                            dataType: 'json',
                                            url: "{{ path('fiscalite_maj_typerue') }}",
                                            success: function(data) {
                                            }
                                        });
                                        var oLatLng = new google.maps.LatLng(lat, lng);
                                        console.log(lat + " " + lng + " " + val);
                                        var mark = new google.maps.Marker({
                                            map: map,
                                            zoom: 15,
                                            position: oLatLng,
                                            title: val,
                                        });
                                        mark.setIcon('http://maps.google.com/mapfiles/ms/icons/green-dot.png')
                                        var bool = new google.maps.geometry.poly.containsLocation(oLatLng, poly);
                                        if (bool) {
                                            console.log("TROUVE : " + val);
                                        } else {
                                            console.log("pas dans le poly");
                                        }
                                    {# } else {
                                        console.log("Géolocalisation impossible");
                                    }#}
                                });

                                {% endfor %}
                            }
                            google.maps.event.addDomListener(window, 'load', initialize);
</script>
{% endblock %}
{% block footer %}
{% endblock %}